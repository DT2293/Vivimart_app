﻿@using WebApplication1.ViewModels
@using System.Security.Claims

@model SalePageViewModel

<section>
    <div class="container mt-1">
        @if (TempData["EmptyCartMessage"] != null)
        {
            <div id="emptyCartMessage" class="alert alert-warning alert-dismissible fade show">
                @TempData["EmptyCartMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="row">
            <!-- Cart Section -->
            <div class="col-md-6 mb-4">
                <div class="form-group">
                    <label asp-for="PhoneNumber"></label>
                    <textarea asp-for="PhoneNumber" class="form-control"></textarea>
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                </div>
                <br />
                <div id="cart" class="border rounded p-4 shadow-sm">
                    <!-- Cart Content -->
                </div>
            </div>

            <!-- Product List Section -->
            <div class="col-md-6">
                <div class="col-md-8 d-flex justify-content-between align-items-center">
                    <h3 class="fw-bold mb-1">Danh Sách Sản Phẩm</h3>
                    <div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                            Menu
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                            <li><a class="dropdown-item" href="#">Tùy chọn 1</a></li>
                            <li><a class="dropdown-item" href="#">Tùy chọn 2</a></li>
                            <li><a class="dropdown-item" href="#">Tùy chọn 3</a></li>
                        </ul>
                    </div>
                </div>

                <br />
                <div class="row overflow-auto" style="max-height: 500px;">
                    @foreach (var product in Model.Products)
                    {
                        <div class="col-md-6 col-lg-4 mb-4">
                            <div class="card h-100 shadow-sm">
                                @if (product.ProductImages != null && product.ProductImages.Any())
                                {
                                    <img src="/assets/Image/@product.ProductImages.First().FileName" alt="@product.Name" class="card-img-top img-fluid" style="height: 120px; object-fit: cover;">
                                }
                                else
                                {
                                    <img src="/assets/Image/no-image.jpg" alt="No Image" class="card-img-top img-fluid" style="height: 120px; object-fit: cover;">
                                }

                                <div class="card-body text-center">
                                    <h6 class="card-title text-truncate">@product.Name</h6>
                                    <p class="card-text mb-2">Giá: <strong class="text-danger">@product.Price.ToString("N0") VND</strong></p>
                                    <button class="btn btn-outline-primary w-100" onclick="addtocart(@product.Id)">
                                        <i class="fas fa-shopping-cart me-2"></i> Thêm vào giỏ hàng
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts{
    <script>
        $(document).ready(function () {
            loadCart();
        });

        function loadCart() {
            $("#cart").load("/Employee/AddToCartPartial/");
        }

        function addtocart(id) {
            console.log("Adding product with ID:", id);
            $.ajax({
                url: "/Employee/AddToCart/" + id,
                type: 'post',
                contentType: 'application/json',
                success: function (response) {
                    console.log("Product added successfully.");
                    loadCart();
                    $("#emptyCartMessage").hide();
                },
                error: function (response) {
                    console.error("Error adding product:", response);
                    alert(response.responseJSON.errors[0]);
                }
            });
        }

        function removeFromCart(productId) {
            console.log("Removing product with ID:", productId);
            $.ajax({
                url: "/Employee/RemoveFromCart/" + productId,
                type: 'post',
                contentType: 'application/json',
                success: function (response) {
                    console.log("Product removed successfully.");
                    loadCart();
                },
                error: function (response) {
                    console.error("Error removing product:", response);
                    alert(response.responseJSON.errors[0]);
                }
            });
        }

        function updateQuantity(productId, quantity) {
            if (quantity <= 0) {
                alert("Quantity must be greater than zero.");
                return;
            }

            $.ajax({
                url: '/Employee/UpdateCart',
                type: 'POST',
                data: { productId: productId, quantity: quantity },
                success: function (response) {
                    if (response.success) {
                        updateTotalPrice(productId, quantity, response.product.price);
                    } else {
                        console.error("Error updating quantity:", response.errors);
                        alert("Error: " + response.errors.join(", "));
                    }
                },
                error: function (xhr, status, error) {
                    console.error("AJAX error:", status, error);
                    alert("Error: " + xhr.responseText || "An error occurred while updating the quantity.");
                }
            });
        }

        function updateTotalPrice(productId, quantity, price) {
            var totalPrice = quantity * price;
            $('#totalprice_' + productId).text(totalPrice.toLocaleString() + ' VND');
        }
    </script>
}
